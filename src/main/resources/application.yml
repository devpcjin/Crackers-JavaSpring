server:
  port: 8080

#eureka:
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://54.180.93.206:8761/eureka
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#
spring:
  h2:
    console:
      enabled: true
  datasource:
    driver-class-name: org.h2.Driver
#    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:h2:tcp://localhost/~/test
#    url: jdbc:mysql://localhost:3306/devit_certification?serverTimezone=Asia/Seoul
    username: sa
    password:
#    username: devit
#    password: 1234
  thymeleaf:
    prefix: classpath:/templates/
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: update
    generate-ddl: true
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: create
#  rabbitmq:
#    host: localhost
#    password: 1234
#    port: 5672
#    username: devit
#    exchange: devit.exchange
#    queue: q.devit
#    routingkey: devit.routingkey
#  application:
#    name: certification-service
#
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher

# cors policy
cors:
  allowed-origins: http://localhost:8080
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: \*
  exposed-headers: Set-Cookie
  max-age: 3600

# jwt secret key
jwt:
  secret: 'secretkeyforspartaprojectcracker'

app:
  auth:
    tokenExpiry: 10800000            # 3??
    refreshTokenExpiry: 604800000    # 7?
    adminToken: TODO

  message: Message has been sent Successfully..



#spring.h2.console.enabled=true
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:tcp://localhost/~/test
#spring.datasource.username=sa
#spring.datasource.password=

#spring.thymeleaf.prefix=classpath:/templates/
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace

cloud:
  aws:
    credentials:
      access-key: AKIAWWHMVBI5FRDS3YPP
      secret-key: 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
    s3:
      bucket: crackertest
    region:
      static: ap-northeast-2
    stack:
      auto: false